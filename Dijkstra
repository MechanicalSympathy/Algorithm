#include "Common.h"
void findDijkstra(int verx[MaxVnum][MaxVnum],int start,int nodeNum){
	int min=0,i=0,j=0;
	int distance[MaxVnum];
	int path[MaxVnum];
	int visit[MaxVnum]={0};
	for(;i<MaxVnum;i++){
		if(verx[start][i]<inf){
			path[i]=start;
			distance[i]=verx[start][i];
		}else{
			distance[i]=inf;
			path[i]=-1;
		}
	}
	visit[start]=1;
	distance[start]=0;
	for(j=0,i=0;j<nodeNum;j++){
		min=inf;
		for(i=0;i<nodeNum;i++){
			if(!visit[i]&&distance[i]<min){
				min=distance[i];
				start=i;
				//printf("start:%d\n",start);
			}
		}
		visit[start]=1;
		for(i=0;i<nodeNum;i++){
			if((distance[i]>(min+verx[start][i]))){
				distance[i]=(min+verx[start][i]);
				path[i]=start;
				printf("path:%d\n",start);
			}
		}
	}	
	for(i=0;i<nodeNum;i++){
		printf("×î¶ÌÂ·¾¶:%d\n",distance[i]);
	}
}

void startDijkstra(){
	int verx[MaxVnum][MaxVnum]={//A B  C  D  E   F  G
								{inf,12,inf,inf,inf, 16,14},//A 
								{12,inf,10,inf,inf, 7,inf},//B 
								{inf,10,inf, 3, 5, 6,inf},//C 
								{inf,inf, 3,inf,4, inf,inf}, //D
								{inf,inf, 5, 4,inf, 2, 8},//E
								{16, 7, 6,inf,2,inf, 9},//F 
								{14,inf,inf,inf,8,9,inf} //G
	};
	findDijkstra(verx,3,7);
}
